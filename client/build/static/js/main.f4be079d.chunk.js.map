{"version":3,"sources":["components/Product.js","App.js","serviceWorker.js","index.js"],"names":["Product","props","className","href","selectedProductProp","productName","model","sku","price","App","state","data","searchItem","selectedProduct","undefined","handleSubmit","bind","handleChange","event","preventDefault","axios","post","selectedItemId","this","then","response","console","log","length","setState","catch","error","target","name","value","selectItemForm","selectedItem","onSubmit","id","onChange","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4be079d.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Product.css';\n\n\nconst Product = (props) => {\n\n  return (\n  <div className=\"main-container\">\n    <div className=\"container\">\n\n      <div className=\"product-directory-bar\">\n        <ol className=\"product-directory\"> <a href=\"www.bbcnews.com\">West Buy</a> > <a href=\"www.bbcnews.com\">Category</a> > <a href=\"www.bbcnews.com\">Sub-Category</a></ol>\n        <div className=\"product-links\">\n          <button>Share</button>\n          <button>Print</button>\n        </div>\n      </div>\n\n\n      <div className=\"product-info-column-one\">\n        <h1 className=\"product-title\">{props.selectedProductProp.productName}</h1>\n\n        <div className=\"product-info\">\n          <div className=\"product-model\">\n            <span>Model: </span>\n            <span>{props.selectedProductProp.model} </span>\n          </div>\n\n          <div className=\"product-sku\">\n            <span>SKU: </span>\n            <span>{props.selectedProductProp.sku}</span>\n          </div>\n        </div>\n\n        <div className=\"product-feedback\">\n            <div className=\"product-feedback-bar\">\n              <span>****</span>\n              <span>4.5</span>\n              <span>(3000 Reviews)</span>\n              <span>\\/</span>\n              <a href=\"www.bbcnews.com\">  | 85 Answered Questions</a>\n            </div>\n        </div>\n        <div className=\"product-info-only-at-button\">\n          <button>Only @ Best Buy</button>\n        </div>\n\n        <div className=\"image-modal-component\">\n        </div>\n\n      </div>\n\n      <div className=\"product-info-column-two\">\n        <div className=\"product-price-match-guarantee\">\n          <span className=\"product-price-match-guarantee-span\">\n            Price Match Guarantee\n          </span>\n        </div>\n        <div className=\"product-info-price\">\n          <span className=\"product-info-price-span\">\n            {props.selectedProductProp.price}\n          </span>\n        </div>\n        <div className=\"product-info-open-box-option\">\n          <span>Open-Box:</span>\n          <span> from $XX.XX</span>\n        </div>\n        <div className=\"product-info-variations\">\n          <div className=\"product-info-variations-header\">\n            <label className=\"product-info-variations-label\">Product Options</label>\n          </div>\n        </div>\n        <div className=\"product-info-fulfillment\">\n          <div className=\"product-info-fulfillment-option-one\"> <strong>FREE Shipping: Get it by Thu, Dec 12</strong></div>\n          <div className=\"product-info-fulfillment-option-two\"><strong>Want it tomorrow? </strong>Choose Next-Day Delivery in checkout to 73301.</div>\n          <div className=\"product-info-fulfillment-option-three\"> <strong>Store Pickup:</strong>Order now and South Austin will have it ready for pickup by Thu, Dec 12. Available today at a store 9 miles away.</div>\n        </div>\n        <div className=\"product-info-cart\">\n          <button className=\"product-info-cart-button\">Add to Cart</button>\n          <div className=\"product-info-cart-aux\">\n            <div className=\"product-info-compare\">\n              <label>\n                <i></i>\n                Compare\n              </label>\n            </div>\n            <div className=\"product-info-save\">\n              <div className=\"product-info-save-for-later\">\n                <button className=\"product-info-save-for-later-button\">\n                  {/* <img></img> */}\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n)};\n\n\nexport default Product;\n\n\n","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Product from './components/Product'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      searchItem: '',\n      selectedProduct: undefined\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  componentDidMount() {\n\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios.post('http://18.191.11.202:5000/getSingleProduct', {\n      selectedItemId: this.state.searchItem\n    })\n    .then((response) => {\n      console.log(response.data.length);\n      if (response.data.length > 0) {\n        this.setState({selectedProduct: response.data[0]})\n      } else {\n        this.setState({selectedProduct: 404})\n      }\n      console.log(this.state.selectedProduct);\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n\n    // axios.post('http://localhost:5000/getSingleProduct', {\n    //   selectedItemId: this.state.searchItem\n    // })\n    // .then((response) => {\n    //   console.log(response.data.length);\n    //   if (response.data.length > 0) {\n    //     this.setState({selectedProduct: response.data[0]})\n    //   } else {\n    //     this.setState({selectedProduct: 404})\n    //   }\n    //   console.log(this.state.selectedProduct);\n    // })\n    // .catch((error) => {\n    //   console.log(error);\n    // })\n\n\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    let selectItemForm;\n    let selectedItem;\n\n    if (this.state.selectedProduct === undefined) {\n      selectItemForm =  <form onSubmit={this.handleSubmit}>\n                            <h3>Item Search</h3>\n                            <input id=\"search-item\" name=\"searchItem\" onChange={this.handleChange} />\n                            <button>Find Item</button>\n                          </form>\n      selectedItem = undefined;\n\n    } else if (this.state.selectedProduct === 404) {\n      selectItemForm =  <form onSubmit={this.handleSubmit}>\n                            <h3>Item Search</h3>\n                            <input id=\"search-item\" name=\"searchItem\" onChange={this.handleChange} />\n                            <button>Find Item</button>\n                          </form>\n      selectedItem = <div>\n                        <p>Error 400</p>\n                        <p>Item Not Found</p>\n                    </div>;\n\n    } else {\n      selectItemForm =  <form onSubmit={this.handleSubmit}>\n                            <h3>Item Search</h3>\n                            <input id=\"search-item\" name=\"searchItem\" onChange={this.handleChange} />\n                            <button>Find Item</button>\n                          </form>\n      selectedItem = <Product selectedProductProp={this.state.selectedProduct} />\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"Header\">\n          {selectItemForm}\n          <p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p>\n        </div>\n        {selectedItem}\n      </div>\n    );\n  }\n}\n\n  \n  export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}